<beans xmlns="http://www.springframework.org/schema/beans"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:p="http://www.springframework.org/schema/p"
           xmlns:context="http://www.springframework.org/schema/context"
           xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.0.xsd">

    <!--导入jdbc配置文件，方便在之后的配置文件中使用spEL表达式访问jdbc.properties中的内容-->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    <!--注解的扫描路径-->
    <context:component-scan base-package="com.*"/>

    <!--配置连接池-->
    <bean id="dateSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="username" value="${jdbc_username}"/>
        <property name="password" value="${jdbc_password}"/>
        <property name="url" value="${jdbc_url}"/>
        <property name="driverClassName" value="${jdbc_driverClassName}"/>
    </bean>

    <!--在Spring中配置Mybatis的sqlsessionfactory-->
    <bean id="sqlSessionFactory"
        class="org.mybatis.spring.SqlSessionFactoryBean"
        p:dataSource-ref="dateSource"
        p:configLocation="classpath:mybatis-config.xml"
        p:mapperLocations="classpath:/mapping/*.xml"/>

    <!--由spring创建dao的实现类对象，即mapper对象，从上面的session工厂中，自动创建出所有mapper包中的mapper实现类对象
        会扫描Dao中所有的.xml文件-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"
        p:basePackage="com.fehead.Dao"
        p:sqlSessionFactoryBeanName="sqlSessionFactory"/>

    <!--事务管理器，用于注解注入事务-->
    <bean id="transactionManager"
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
        p:dataSource-ref="dateSource"/>


</beans>
